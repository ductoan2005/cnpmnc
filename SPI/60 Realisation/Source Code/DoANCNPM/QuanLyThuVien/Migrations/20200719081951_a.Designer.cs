// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyThuVien.Models;

namespace QuanLyThuVien.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200719081951_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuanLyThuVien.Models.CT_PhieuMuon", b =>
                {
                    b.Property<int>("CT_PhieuMuonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int?>("PhieuMuonID")
                        .HasColumnType("int");

                    b.Property<int?>("SachID")
                        .HasColumnType("int");

                    b.HasKey("CT_PhieuMuonID");

                    b.HasIndex("CartID");

                    b.HasIndex("PhieuMuonID");

                    b.HasIndex("SachID");

                    b.ToTable("CT_PhieuMuon");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.CT_PhieuTra", b =>
                {
                    b.Property<int>("CT_PhieuTraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PhieuTraID")
                        .HasColumnType("int");

                    b.Property<int?>("SachID")
                        .HasColumnType("int");

                    b.Property<int>("SoNgayMuon")
                        .HasColumnType("int");

                    b.HasKey("CT_PhieuTraID");

                    b.HasIndex("PhieuTraID");

                    b.HasIndex("SachID");

                    b.ToTable("CT_PhieuTra");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocGiaID")
                        .HasColumnType("int");

                    b.Property<int?>("SachID")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.HasIndex("DocGiaID");

                    b.HasIndex("SachID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.DocGia", b =>
                {
                    b.Property<int>("DocGiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConLai")
                        .HasColumnType("float");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiDocGiaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLapThe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int>("SLSachDaMuon")
                        .HasColumnType("int");

                    b.Property<string>("TenDocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocGiaID");

                    b.HasIndex("LoaiDocGiaID");

                    b.ToTable("DocGia");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.LoaiDocGia", b =>
                {
                    b.Property<int>("LoaiDocGiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiDocGiaID");

                    b.ToTable("LoaiDocGia");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuMuon", b =>
                {
                    b.Property<int>("PhieuMuonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocGiaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayMuon")
                        .HasColumnType("datetime2");

                    b.Property<double>("TienCoc")
                        .HasColumnType("float");

                    b.Property<int?>("TinhTrangPhieuMuonID")
                        .HasColumnType("int");

                    b.HasKey("PhieuMuonID");

                    b.HasIndex("DocGiaID");

                    b.HasIndex("TinhTrangPhieuMuonID");

                    b.ToTable("PhieuMuon");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuThuTienPhat", b =>
                {
                    b.Property<int>("PhieuThuTienPhatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocGiaID")
                        .HasColumnType("int");

                    b.Property<int?>("PhieuTraID")
                        .HasColumnType("int");

                    b.Property<double>("TienCoc")
                        .HasColumnType("float");

                    b.Property<double>("TienConLai")
                        .HasColumnType("float");

                    b.Property<double>("TienPhat")
                        .HasColumnType("float");

                    b.HasKey("PhieuThuTienPhatID");

                    b.HasIndex("DocGiaID");

                    b.HasIndex("PhieuTraID");

                    b.ToTable("PhieuThuTienPhat");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuTra", b =>
                {
                    b.Property<int>("PhieuTraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocGiaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("TienPhat")
                        .HasColumnType("int");

                    b.HasKey("PhieuTraID");

                    b.HasIndex("DocGiaID");

                    b.ToTable("PhieuTra");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.Sach", b =>
                {
                    b.Property<int>("SachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NamHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayXB")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaXB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TheLoaiSachID")
                        .HasColumnType("int");

                    b.Property<int?>("TinhTrangSachID")
                        .HasColumnType("int");

                    b.HasKey("SachID");

                    b.HasIndex("TheLoaiSachID");

                    b.HasIndex("TinhTrangSachID");

                    b.ToTable("Sach");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.TheLoaiSach", b =>
                {
                    b.Property<int>("TheLoaiSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTLSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TheLoaiSachID");

                    b.ToTable("TheLoaiSach");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.TinhTrangPhieuMuon", b =>
                {
                    b.Property<int>("TinhTrangPhieuMuonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TinhTrangPM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhTrangPhieuMuonID");

                    b.ToTable("TinhTrangPhieuMuon");

                    b.HasData(
                        new
                        {
                            TinhTrangPhieuMuonID = 1,
                            TinhTrangPM = "Chưa Trả"
                        },
                        new
                        {
                            TinhTrangPhieuMuonID = 2,
                            TinhTrangPM = "Đã Trả"
                        });
                });

            modelBuilder.Entity("QuanLyThuVien.Models.TinhTrangSach", b =>
                {
                    b.Property<int>("TinhTrangSachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTTSach")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhTrangSachID");

                    b.ToTable("TinhTrangSach");

                    b.HasData(
                        new
                        {
                            TinhTrangSachID = 1,
                            TenTTSach = "Trống"
                        },
                        new
                        {
                            TinhTrangSachID = 2,
                            TenTTSach = "Cho Thuê"
                        },
                        new
                        {
                            TinhTrangSachID = 3,
                            TenTTSach = "Mất"
                        });
                });

            modelBuilder.Entity("QuanLyThuVien.Models.CT_PhieuMuon", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.Cart", "Cart")
                        .WithMany("CT_PhieuMuons")
                        .HasForeignKey("CartID");

                    b.HasOne("QuanLyThuVien.Models.PhieuMuon", "PhieuMuon")
                        .WithMany("CT_PhieuMuons")
                        .HasForeignKey("PhieuMuonID");

                    b.HasOne("QuanLyThuVien.Models.Sach", "Sach")
                        .WithMany("CT_PhieuMuons")
                        .HasForeignKey("SachID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.CT_PhieuTra", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.PhieuTra", "PhieuTra")
                        .WithMany("CT_PhieuTras")
                        .HasForeignKey("PhieuTraID");

                    b.HasOne("QuanLyThuVien.Models.Sach", "Sach")
                        .WithMany("CT_PhieuTras")
                        .HasForeignKey("SachID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.Cart", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.DocGia", "DocGia")
                        .WithMany("Carts")
                        .HasForeignKey("DocGiaID");

                    b.HasOne("QuanLyThuVien.Models.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("SachID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.DocGia", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.LoaiDocGia", "LoaiDocGia")
                        .WithMany("DocGias")
                        .HasForeignKey("LoaiDocGiaID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuMuon", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.DocGia", "DocGia")
                        .WithMany("PhieuMuons")
                        .HasForeignKey("DocGiaID");

                    b.HasOne("QuanLyThuVien.Models.TinhTrangPhieuMuon", "TinhTrangPhieuMuon")
                        .WithMany("PhieuMuons")
                        .HasForeignKey("TinhTrangPhieuMuonID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuThuTienPhat", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.DocGia", "DocGia")
                        .WithMany("PhieuThuTienPhats")
                        .HasForeignKey("DocGiaID");

                    b.HasOne("QuanLyThuVien.Models.PhieuTra", "PhieuTra")
                        .WithMany("PhieuThuTienPhats")
                        .HasForeignKey("PhieuTraID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.PhieuTra", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.DocGia", "DocGia")
                        .WithMany("PhieuTras")
                        .HasForeignKey("DocGiaID");
                });

            modelBuilder.Entity("QuanLyThuVien.Models.Sach", b =>
                {
                    b.HasOne("QuanLyThuVien.Models.TheLoaiSach", "TheLoaiSach")
                        .WithMany("Sachs")
                        .HasForeignKey("TheLoaiSachID");

                    b.HasOne("QuanLyThuVien.Models.TinhTrangSach", "TinhTrangSach")
                        .WithMany("Sachs")
                        .HasForeignKey("TinhTrangSachID");
                });
#pragma warning restore 612, 618
        }
    }
}
